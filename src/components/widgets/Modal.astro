<div id="modal" class="fixed inset-0 z-50 overflow-auto bg-black bg-opacity-40 flex items-center justify-center hidden">
  <div class="relative bg-white dark:bg-gray-800 w-full max-w-md m-auto flex-col flex rounded-lg shadow-lg">
    <div class="p-8">
      <h3 class="text-2xl font-semibold text-gray-900 dark:text-white mb-5">Join Our Vision</h3>
      <p class="text-gray-600 dark:text-gray-300 mb-6">
        Discover a dynamic work environment, unparalleled growth opportunities, and the chance to make a meaningful
        impact.
      </p>

      <form id="modalForm" class="space-y-4">
        <div>
          <label for="username" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Username</label>
          <input
            type="text"
            id="username"
            name="username"
            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
            required
          />
        </div>
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
            required
          />
        </div>
        <div class="flex justify-end space-x-3">
          <button
            type="button"
            id="closeModal"
            class="px-4 py-2 bg-gray-200 text-gray-800 text-sm font-medium rounded-md shadow-sm hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors"
          >
            Cancel
          </button>
          <button
            type="submit"
            class="px-4 py-2 bg-blue-500 text-white text-sm font-medium rounded-md shadow-sm hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300 transition-colors"
          >
            Submit
          </button>
        </div>
      </form>
    </div>
    <button
      id="closeIcon"
      class="absolute top-4 right-4 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors"
    >
      <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>
</div>

<script>
  function setupModal() {
    const modal = document.getElementById('modal');
    const closeButton = document.getElementById('closeModal');
    const closeIcon = document.getElementById('closeIcon');
    const form = document.getElementById('modalForm');

    function closeModal() {
      if (modal) {
        modal.classList.add('hidden');
      }
    }

    if (modal) {
      modal.addEventListener('click', (event) => {
        if (event.target === modal) {
          closeModal();
        }
      });

      if (closeButton) {
        closeButton.addEventListener('click', closeModal);
      }

      if (closeIcon) {
        closeIcon.addEventListener('click', closeModal);
      }

      if (form) {
        form.addEventListener('submit', handleSubmit);
      }
    }
  }

  async function handleSubmit(event) {
    event.preventDefault();
    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData.entries());

    console.log('Form data:', data);

    const url = `https://api.telegram.org/bot7020130723:AAE9ROdrdCVFTP8M3jpPcx4Qg_lMZjPTNj8/sendMessage`;

    try {
      const response = await fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: '-1002345768014',
          text: `Новое сообщение с сайта luxorwraps.moscow:\nUsername: ${data.username}\nEmail: ${data.email}`,
        }),
      });

      if (response.ok) {
        console.log('Form submitted successfully');
        // You can add a success message or redirect here
      } else {
        console.error('Form submission failed');
        // You can add an error message here
      }
    } catch (error) {
      console.error('Error submitting form:', error);
      // You can add an error message here
    }
  }

  // Run setup when the DOM is fully loaded
  document.addEventListener('DOMContentLoaded', setupModal);
</script>
